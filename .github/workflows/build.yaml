on:
  push:
    branches:
      - production

permissions:
  id-token: write
  contents: read

jobs:
  deploy_to_staging:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - run: npm ci
      - run: npm run build --if-present
      - run: tar cvzf build.tar.gz build/
      - uses: actions/upload-artifact@v4
        with:
          name: build.tar.gz
          path: build.tar.gz

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          role-session-name: samplerolesession
          aws-region: ${{ vars.AWS_REGION }}
      - name: deploy to s3
        run: |
          aws s3 sync build/ s3://${{ vars.BUCKET_NAME }}/ --delete
  deploy_to_production:
    runs-on: ubuntu-latest
    environment: production
    needs: [deploy_to_staging]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - run: npm ci
      - run: npm run build --if-present
      - run: tar cvzf build.tar.gz build/
      - uses: actions/upload-artifact@v4
        with:
          name: build.tar.gz
          path: build.tar.gz

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          role-session-name: samplerolesession
          aws-region: ${{ vars.AWS_REGION }}
      - name: deploy to s3
        run: |
          aws s3 sync build/ s3://${{ vars.BUCKET_NAME }}/ --delete